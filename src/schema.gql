# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Product {
  _id: ID!
  article: Article!
  site: String!
  page: String!
  updateDate: UpdateDate!
}

type Article {
  name: String!
  slug: String!
  mark: String!
  inStock: Float!
  price: Float!
  discountPrice: Float!
  description: String!
  featured: Featured!
  details: Detail
  specs: [SpecsProduct!]!
  tags: [TagsProduct!]!
  image: [ImageProduct!]
  seo: Seo!
}

type UpdateDate {
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Featured {
  name: String!
  href: String!
}

type Detail {
  material: String!
  color: String!
  finishing: String!
  logo: String!
  accessories: String!
  dimensions: [String!]!
}

type ImageProduct {
  uid: String!
  src: String!
  alt: String!
}

type Seo {
  name: String!
  href: String!
  description: String!
  image: ImageProduct!
}

type TagsProduct {
  uid: String!
  text: String!
}

type SpecsProduct {
  uid: String!
  text: String!
}

type Page {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page]
  updateDate: UpdateDatePage!
}

type UpdateDatePage {
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DataPage {
  type: String!
  icon: ImagePage!
  seo: SeoPage!
}

type SeoPage {
  title: String!
  href: String!
  description: String!
  image: ImagePage!
}

type ImagePage {
  src: String!
  alt: String!
}

type ComponentPage {
  uid: String!
  component: String!
  html: String!
}

type Page0 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page1!]!
  updateDate: UpdateDatePage!
}

type Page1 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page2!]!
  updateDate: UpdateDatePage!
}

type Page2 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page3!]!
  updateDate: UpdateDatePage!
  product(type: String!): [Product!]!
}

type Page3 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page4!]!
  updateDate: UpdateDatePage!
}

type Page4 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page5!]!
  updateDate: UpdateDatePage!
}

type Page5 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page6!]!
  updateDate: UpdateDatePage!
}

type Page6 {
  _id: ID!
  data: DataPage!
  slug: String!
  section: [ComponentPage!]!
  page: [Page]
  updateDate: UpdateDatePage!
}

type Site {
  _id: ID!
  data: Data!
  register: [Register!]!
  client: String!
  url: String!
  product(type: String!): [Product!]!
  page: [Page0!]!
  updateDate: UpdateDateSite!
}

type UpdateDateSite {
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Register {
  uid: String!
  change: String!
  date: String!
}

type Data {
  name: String!
  numberPhone: Float!
  address: String!
  type: String!
  users: [String!]!
  location: String
  dataBase: [DataBase!]!
  description: String!
  domain: Domain!
  image: Image!
  logo: Image!
  icon: Image!
}

type DataBase {
  uid: String!
  name: String!
  type: String!
  image: Image!
}

type Image {
  src: String!
  alt: String!
}

type Domain {
  name: String!
  dlt: String!
}

type Blog {
  _id: ID!
  data: DataBlog!
  site: String!
  category: String!
  createdAt: DateTime
  updatedAt: DateTime
}

type DataBlog {
  title: String!
  slug: String!
  content: String!
  description: String!
  meta: String!
  tags: [Tags!]!
  author: String!
  thumbnail: ImageBlog!
  seo: SeoBlog!
}

type SeoBlog {
  name: String!
  href: String!
  description: String!
  image: ImageBlog!
}

type Tags {
  uid: String!
  text: String!
}

type ImageBlog {
  src: String!
  alt: String!
}

type User {
  _id: ID!
  data: DataUser!
  email: String!
  password: String!
  site: String!
  updateDate: UpdateDateUser!
}

type UpdateDateUser {
  createdAt: DateTime!
  updatedAt: DateTime!
}

type DataUser {
  name: String!
  role: String!
  image: String!
  status: Boolean!
  google: Boolean!
}

type Comment {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Upload {
  """Example field (placeholder)"""
  exampleField: Int!
}

type Query {
  getSite(_id: ID!): Site!
  getSites: [Site!]!
  getProduct(_id: ID!, type: String!): Product!
  getProducts(site: String!, type: String!): [Product!]!
  getPages0: [Page0!]!
  getPages1: [Page1!]!
  getPage2(_id: ID!): Page2!
  getPages2: [Page2!]!
  blog(id: Int!): Blog!
  getUser(_id: ID!): User!
  getUserByEmail(email: String!): User!
  getUsers: [User!]!
  comment(id: Int!): Comment!
  upload(id: Int!): Upload!
}

type Mutation {
  createSite(input: CreateSite!): Site!
  updateSite(_id: ID!, input: UpdateSite!): Site!
  deleteSite(_id: ID!): String!
  deleteSites: String!
  createProduct(input: CreateProductInput!, type: String!): Product!
  updateProduct(_id: ID!, input: UpdateProductInput!, type: String!): Product!
  deleteProduct(_id: ID!, type: String!): String!
  deleteProducts(site: String!, type: String!): String!
  createPage0(input: CreatePage!): Page0!
  updatePage0(_id: ID!, input: UpdatePage!): Page0!
  deletePage0(_id: ID!): String!
  createPage1(input: CreatePage!): Page1!
  updatePage1(_id: ID!, input: UpdatePage!): Page1!
  deletePage1(_id: ID!): String!
  createPage2(input: CreatePage!): Page2!
  updatePage2(_id: ID!, input: UpdatePage!): Page2!
  deletePage2(_id: ID!): String!
  createPage3(input: CreatePage!): Page3!
  updatePage3(_id: ID!, input: UpdatePage!): Page3!
  deletePage3(_id: ID!): String!
  createPage4(input: CreatePage!): Page4!
  updatePage4(_id: ID!, input: UpdatePage!): Page4!
  deletePage4(_id: ID!): String!
  createPage5(input: CreatePage!): Page5!
  updatePage5(_id: ID!, input: UpdatePage!): Page5!
  deletePage5(_id: ID!): String!
  addBlog(input: CreateBlog!): Blog!
  createBlogs(createBlogInput: CreateBlogInput!): Blog!
  updateBlog(updateBlogInput: UpdateBlogInput!): Blog!
  removeBlog(id: Int!): Blog!
  createUser(input: CreateUserInput!): User!
  updateUser(_id: ID!, input: UpdateUserInput!): User!
  deleteUser(_id: ID!): String!
  deleteUsers(site: String!): String!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  removeComment(id: Int!): Comment!
  createUpload(createUploadInput: CreateUploadInput!): Upload!
  updateUpload(updateUploadInput: UpdateUploadInput!): Upload!
  removeUpload(id: Int!): Upload!
}

input CreateSite {
  name: String!
  domain: String!
  description: String!
  type: String!
  client: String!
  change: String!
  uid: String!
}

input UpdateSite {
  name: String!
  domain: String!
  description: String!
  type: String!
  change: String!
  uid: String!
}

input CreateProductInput {
  name: String!
  mark: String!
  description: String!
  featured: String!
  inStock: Float!
  price: Float!
  discountPrice: Float!
  site: String!
  page: String!
}

input UpdateProductInput {
  name: String!
  mark: String!
  description: String!
  featured: String!
  inStock: Float!
  price: Float!
  discountPrice: Float!
}

input CreatePage {
  title: String!
  description: String!
  icon: String
  src: String!
  alt: String!
  type: String!
  page: String!
  site: String!
}

input UpdatePage {
  title: String!
  description: String!
  icon: String
  src: String!
  alt: String!
  type: String!
}

input CreateBlog {
  title: String!
  content: String!
  meta: String!
  tags: [String!]!
  author: String!
  description: String!
  site: String!
  category: String!
  src: String!
  alt: String!
}

input CreateBlogInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateBlogInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUserInput {
  name: String!
  site: String!
  image: String!
  email: String!
  password: String!
  role: String!
}

input UpdateUserInput {
  name: String
  site: String
  image: String
  email: String
  password: String
  role: String
}

input CreateCommentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateCommentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input CreateUploadInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateUploadInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}